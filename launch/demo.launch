<?xml version="1.0" ?>
<launch>    
  <!-- Robot arguments -->
  <arg name="fake_localisation" default="true" doc="fake the localisation, sets map_server and world_tf to true."/>
  <arg name="riseholme_dt" default="false"/>
  <arg name="robot_name" default="thorvald"/>
  <arg name="robot_no" default="001"/>  <!-- unused-->
  <arg name="robot_model" default="$(find bacchus_gazebo)/config/robot.yaml"/>
  <arg name="navigation_mode" default="topologic"/>

  <!-- ############################### ROBOT SIMULATION BASE STACK ############################# -->
  <include file="$(find ros_crop_estimation)/launch/base.launch">
    <!-- sensor suites:
      - simple_sensors
      - bacchus_sensors (2 hokuyo, 3 kinect v2, 1 velodyne)
      -->
    <arg name="model_extras" default="$(find bacchus_gazebo)/urdf/bacchus_sensors.xacro"/>
    <arg name="multi_sim" default="false"/>

    <!-- navigation arguments -->
    <arg name="launch_move_base" default="true"/>
    <arg name="use_carrot_planner" default="false"/>
    <arg name="use_omni" default="false"/>
    <arg name="world_2_map_pose" default="0.0 0.0 0.0 0.0 0.0 0.0 1.0" />

  </include> 

  <!-- ############################### LOCAL OBJECT DETECTOR ############################# -->
  <node name="object_detector" pkg="ros_crop_estimation" type="image_object_detector.py"/>

  <!-- ############################### GLOBAL OBJECT LOCATION ############################# -->
  <node name="object_locator" pkg="ros_crop_estimation" type="global_objects_integrator.py"/>

  <group if="$(eval arg('navigation_mode')=='random_walk')">
    <include file="$(find ros_crop_estimation)/launch/nav_random_walk.launch"/>
  </group>

  <group if="$(eval arg('navigation_mode')=='topologic')">
    <!-- topological navigation -->
    <include file="$(find uol_cmp9767m_tutorial)/launch/topo_nav.launch">
      <arg name="tmap" value="crop_estimation"/>
    </include>
  </group>
</launch>






